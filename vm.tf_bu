# resource "azurerm_linux_virtual_machine" "backendServer" {

#   name                = "postgresMachine"
#   location            = azurerm_resource_group.main.location
#   resource_group_name = azurerm_resource_group.main.name
#   size                = "Standard_b1s"
#   admin_username      = var.admin_username
#   admin_password      = var.admin_password

#   #  availability_set_id             = azurerm_availability_set.avset.id
#   disable_password_authentication = false

#   network_interface_ids = [
#     azurerm_network_interface.network_interface_db[0].id,
#   ]

#   source_image_reference {
#     publisher = "Canonical"
#     offer     = "0001-com-ubuntu-server-focal"
#     sku       = "20_04-lts-gen2"
#     version   = "latest"
#   }

#   os_disk {
#     storage_account_type = "Standard_LRS"
#     caching              = "ReadWrite"
#   }
# }
# resource "azurerm_virtual_machine_extension" "backendEndServerVm" {
#   name                            = "backendMachine"
#   virtual_machine_id   = azurerm_linux_virtual_machine.backendServer.id
#   publisher            = "Microsoft.Azure.Extensions"
#   type                 = "CustomScript"
#   type_handler_version = "2.0"

#   settings = <<SETTINGS
#     {
#     "fileUris": [ "./backend.sh" ],
#     "commandToExecute": "sh ./backend.sh"
#     }
# SETTINGS
#   tags = {
#     environment = "Production"
#   }
# }
# # application virtual machine
# resource "azurerm_linux_virtual_machine" "frontendServer" {
#   count = "3"
#   name                            = "frontendMachine${count.index}"
#   resource_group_name             = azurerm_resource_group.main.name
#   location                        = azurerm_resource_group.main.location
#   disable_password_authentication = false
#   #  size                = "Standard_F2"
#   depends_on = [azurerm_linux_virtual_machine.backendServer]
#   size                  = "Standard_b1s"
#   admin_username        = var.admin_username
#   admin_password        = var.admin_password
#   availability_set_id   = azurerm_availability_set.avset.id
#   network_interface_ids = [element(azurerm_network_interface.network_interface_app.*.id, count.index)]

#   os_disk {
#     caching              = "ReadWrite"
#     storage_account_type = "Standard_LRS"
#   }

#   source_image_reference {
#     publisher = "Canonical"
#     offer     = "0001-com-ubuntu-server-focal"
#     sku       = "20_04-lts-gen2"
#     version   = "latest"
#   }
#   tags = {
#     environment = "staging"
#   }

# }
# resource "azurerm_virtual_machine_extension" "frontendServerVm" {
#   count = "3"
#   name                            = "frontendMachine${count.index}"
#   virtual_machine_id   = element(azurerm_linux_virtual_machine.frontendServer.*.id, count.index)
#   publisher            = "Microsoft.Azure.Extensions"
#   type                 = "CustomScript"
#   type_handler_version = "2.0"

#   settings = <<SETTINGS
#     {
#     "fileUris": [ "./frontend.sh" ],
#     "commandToExecute": "sh ./frontend.sh"
#     }
# SETTINGS


#   tags = {
#     environment = "Production"
#   }
# }
# resource "azurerm_availability_set" "avset" {
#   name                         = "availabilitySet"
#   location            = azurerm_resource_group.main.location
#   resource_group_name = azurerm_resource_group.main.name
#   platform_fault_domain_count  = 3
#   platform_update_domain_count = 3
#   managed                      = true
# }
